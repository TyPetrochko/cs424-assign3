TODO

cleanup is only getting called once in bocking.c!!

In addition to PRIMARY, there should be a SECONDARY buffer

nonblocking.c
  - Make sure the initial assignments are done (use non-async)
  - Make sure while we're processing, we are ALWAYS sending one column and receiving one
  - Do all the waits at the end, and all the send/recvs at the beginning
  - Note we will need one recv request and two send requests
  - Note on receiving, we don't know receiving size so use N * block_width
  - Should look like
    1. Process PRIMARY buffer
    2. Wait to finish receiving in SECONDARY buffer
    3. Start sending data in SECONDARY buffer (if round != last)
    4. Wait to finish sending data in PRIMARY buffer
    5. Switch primary/secondary buffers
    6. Start receiving data in secondary buffer


loadbalancing.c
  - master:

    elts_per_proc = (N * (N + 1)) / p
    total elts = (N * (N + 1))
    p1 = p2 = 0 // keep track of rows
    proc = 0
    while(p2 < N)
      if start_index(p2) - start_index(p1) > elts_per_proc
        send rows p1 through (p2 - 1) to proc, with len, offset, etc.
        send p1 and (p2 - 1) to proc
        proc++
        p1 = p2
      else p2++

    send rows p1 through (p2 - 1) to proc
  
  
